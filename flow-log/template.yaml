---
AWSTemplateFormatVersion: 2010-09-09
Description: VPC flow logs required for automation of network ACL rules
Transform: 'AWS::LanguageExtensions'
Parameters:
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of subnet IDs for which you need flow logs.
  LogGroupRetentionInDays:
    Type: Number
    Default: 1
    Description: Limit the retention of flow logs to optimize cost.
  FlowLogFormat:
    Type: String
    Default: '${srcaddr} ${dstport} ${packets} ${action} ${protocol} ${flow-direction} ${vpc-id}'
    Description: Minimum set of flow log fields required for anomaly detection.
  ListenerPort:
    Type: Number
    Description: Port number for your endpoint
  ListenerProtocolNumber:
    Type: Number
    Description: IANA protocol number for your endpoint
  MetricsNamespace:
    Type: String
    Description: Namespace for custom CloudWatch metric for rejected packets
Resources:
  'Fn::ForEach::FlowLogs':
    - SubnetId
    # remove "subnet-" from each subnet ID so it can be used in logical ID
    - !Split
      - ','
      -  !Join
        - ''
        - !Split
          - 'subnet-'
          - !Join [ ',', !Ref SubnetIds ]
    - '${SubnetId}FlowLog':
        Type: AWS::EC2::FlowLog
        Properties:
          DeliverLogsPermissionArn: !GetAtt FlowLogRole.Arn
          ResourceId: !Sub 'subnet-${SubnetId}'
          ResourceType: Subnet
          LogDestinationType: cloud-watch-logs
          LogGroupName: !Ref LogGroup
          LogFormat: !Ref FlowLogFormat
          MaxAggregationInterval: 60
          TrafficType: ALL
          Tags:
            - Key: Name
              Value: !Sub '${AWS::StackName}-flow-log'
  LogGroup:
    Type: AWS::Logs::LogGroup 
    Properties:
      LogGroupName: !Sub '${AWS::StackName}-log-group'
      RetentionInDays: !Ref LogGroupRetentionInDays
      KmsKeyId: !GetAtt LogGroupKey.Arn
  LogGroupKeyAlias:
    Type: AWS::KMS::Alias
    Properties: 
      AliasName: !Sub 'alias/${AWS::StackName}-logs'
      TargetKeyId: !Ref LogGroupKey
  LogGroupKey:
    Type: AWS::KMS::Key
    Properties:
      Description: CloudWatch Logs encryption key
      EnableKeyRotation: true
      PendingWindowInDays: 20
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: Enable IAM Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'
          - Sid: Allow CloudWatch Logs
            Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - kms:ReEncrypt
              - kms:Encrypt
              - kms:Decrypt
              - kms:GenerateDataKey
              - kms:DescribeKey
            Resource: '*'
            Condition:
              ArnEquals:
                "kms:EncryptionContext:aws:logs:arn":
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${AWS::StackName}-log-group"
  RejectedPacketsMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: rejected-packets
      FilterPattern: !Sub '[srcaddr, dstport=${ListenerPort}, packets, action=REJECT, protocol=${ListenerProtocolNumber}, direction=ingress, vpc_id]'
      LogGroupName: !Ref LogGroup
      MetricTransformations:
        - Dimensions:
            - Key: VpcId
              Value: '$vpc_id'
          MetricName: RejectedPackets
          MetricNamespace: !Ref MetricsNamespace
          MetricValue: '$packets'
          Unit: Count
  AllowedPacketsMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: allowed-packets
      FilterPattern: !Sub '[srcaddr, dstport=${ListenerPort}, packets, action=ACCEPT, protocol=${ListenerProtocolNumber}, direction=ingress, vpc_id]'
      LogGroupName: !Ref LogGroup
      MetricTransformations:
        - Dimensions:
            - Key: VpcId
              Value: '$vpc_id'
          MetricName: AllowedPackets
          MetricNamespace: !Ref MetricsNamespace
          MetricValue: '$packets'
          Unit: Count
  FlowLogRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: vpc-flow-logs.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Description: provide permission to publish flow logs
      Policies:
        - PolicyName: logs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - kms:Encrypt
                  - kms:GenerateDataKey
                  - kms:DescribeKey
                Resource: !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${LogGroupKey}'
              - Effect: Allow
                Action: logs:DescribeLogGroups
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*'
              - Effect: Allow
                Action: logs:CreateLogGroup
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${LogGroup}'
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${LogGroup}:log-stream:*'
Outputs:
  LogGroupName:
    Value: !Ref LogGroup
  LogGroupArn:
    Value: !GetAtt LogGroup.Arn
